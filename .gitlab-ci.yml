stages:
  - package
  - build

cache:
  key: $CI_PROJECT_ID
  paths:
    - .m2/repository/
    - renfeid-ui/node_modules/

node_package:
  stage: package
  image: node:16-alpine
  rules:
    - if: '$CI_COMMIT_TAG && $CI_SERVER_URL =~ /gitlab.com/'
  script:
    - cd renfeid-ui
    - npm install -config renfeid-ui/package.json
    - npm run build -config renfeid-ui/package.json
  artifacts:
    name: 'node-package'
    when: on_success
    expire_in: 1 day
    paths:
      - renfeid-ui/public
      - renfeid-ui/package.json
      - renfeid-ui/.next

node_package_jh:
  stage: package
  image: node:16-alpine
  rules:
    - if: '$CI_COMMIT_TAG && $CI_SERVER_URL =~ /jihulab.com/'
  script:
    - npm install -config renfeid-ui/package.json --registry=https://registry.npm.taobao.org
    - npm run build -config renfeid-ui/package.json
  artifacts:
    name: 'node-package'
    when: on_success
    expire_in: 1 day
    paths:
      - renfeid-ui/public
      - renfeid-ui/package.json
      - renfeid-ui/.next

maven_package:
  stage: package
  image: maven:3.8.6-openjdk-8
  rules:
    - if: '$CI_COMMIT_TAG && $CI_SERVER_URL =~ /gitlab.com/'
  script:
    - mvn clean package -f renfeid-service/pom.xml
      -P prod -Dmaven.test.skip=true
      -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository
  artifacts:
    name: 'maven-package'
    when: on_success
    expire_in: 1 day
    paths:
      - renfeid-service/target

maven_package_jh:
  stage: package
  image: maven:3.8.6-openjdk-8
  rules:
    - if: '$CI_COMMIT_TAG && $CI_SERVER_URL =~ /jihulab.com/'
  script:
    - mvn clean package -f renfeid-service/pom.xml
      -P prod -Dmaven.test.skip=true
      -Dmaven.repo.remote=https://maven.aliyun.com/repository/public
      -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository
  artifacts:
    name: 'maven-package'
    when: on_success
    expire_in: 1 day
    paths:
      - renfeid-service/target

docker_build_node:
  stage: build
  image: docker:latest
  rules:
    - if: '$CI_COMMIT_TAG'
  services:
    - docker:dind
  script:
    - docker build -t $CI_REGISTRY_IMAGE/ui:$CI_COMMIT_TAG renfeid-ui/.
    - docker login --username=$CI_REGISTRY_USER --password=$CI_REGISTRY_PASSWORD $CI_REGISTRY_IMAGE
    - docker push $CI_REGISTRY_IMAGE/ui:$CI_COMMIT_TAG

docker_build_maven:
  stage: build
  image: docker:latest
  rules:
    - if: '$CI_COMMIT_TAG'
  services:
    - docker:dind
  script:
    - docker build -t $CI_REGISTRY_IMAGE/service:$CI_COMMIT_TAG renfeid-service/.
    - docker login --username=$CI_REGISTRY_USER --password=$CI_REGISTRY_PASSWORD $CI_REGISTRY_IMAGE
    - docker push $CI_REGISTRY_IMAGE/service:$CI_COMMIT_TAG
